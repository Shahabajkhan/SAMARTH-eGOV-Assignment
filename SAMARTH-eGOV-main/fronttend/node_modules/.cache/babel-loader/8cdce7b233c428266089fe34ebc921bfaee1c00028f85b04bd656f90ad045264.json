{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91914\\\\Downloads\\\\SAMARTH-eGOV-main\\\\SAMARTH-eGOV-main\\\\fronttend\\\\src\\\\components\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const auth = localStorage.getItem('user');\n    if (auth) {\n      alert(\"already exists\"); // It's not clear what this alert is supposed to do\n      navigate('/'); // This will navigate the user to the home page if they're already signed up\n    }\n  }, []); // useEffect should have an empty dependency array as the second argument to run only once\n\n  const collectData = async () => {\n    console.warn(\"dddddd\"); // It's not clear what this console warning is for\n    console.log(name, email, password); // This will log the user's name, email, and password to the console\n\n    let result = await fetch('http://localhost:5000/register', {\n      method: 'post',\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    result = await result.json();\n    console.warn(\"result\", result); // This will log the result of the fetch request to the console\n\n    // localStorage.setItem(\"user\", JSON.stringify(result));\n    navigate(\"/login\"); // This will navigate the user to the home page after signing up\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button1\",\n      onClick: collectData,\n      type: \"button\",\n      children: \"SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"Jas7mfUHJ5ZLhkTSMuBvGeWN0Vo=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","SignUp","_s","name","setName","password","setPassword","email","setEmail","navigate","auth","localStorage","getItem","alert","collectData","console","warn","log","result","fetch","method","body","JSON","stringify","headers","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91914/Downloads/SAMARTH-eGOV-main/SAMARTH-eGOV-main/fronttend/src/components/SignUp.js"],"sourcesContent":["\r\nimport React,{useEffect, useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const auth = localStorage.getItem('user');\r\n    if(auth){\r\n      alert(\"already exists\"); // It's not clear what this alert is supposed to do\r\n      navigate('/') // This will navigate the user to the home page if they're already signed up\r\n    }\r\n  }, []) // useEffect should have an empty dependency array as the second argument to run only once\r\n\r\n  const collectData = async () => {\r\n    console.warn(\"dddddd\"); // It's not clear what this console warning is for\r\n    console.log(name, email, password); // This will log the user's name, email, and password to the console\r\n\r\n    let result = await fetch('http://localhost:5000/register', {\r\n      method: 'post',\r\n      body: JSON.stringify({name, email, password}),\r\n      headers: {'Content-Type': 'application/json'}\r\n    });\r\n    result = await result.json();\r\n    console.warn(\"result\",result); // This will log the result of the fetch request to the console\r\n    \r\n    // localStorage.setItem(\"user\", JSON.stringify(result));\r\n    navigate(\"/login\"); // This will navigate the user to the home page after signing up\r\n  }\r\n\r\n  return (\r\n    <div className='signup'>\r\n      <h1>Signup</h1>\r\n      <input type=\"text\" placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)} />\r\n      <input type=\"text\" placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"password\" placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <button className='button1' onClick={collectData} type='button'>SignUp</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}